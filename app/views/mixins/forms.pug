- const isRequired = (f, property) => { const obj = f.model ? f.model[property] : null; return obj && obj.validate ? obj.validate.notEmpty : null; }

mixin formFor(f, options = {})
  - const url = _.get(options, 'url');
  - const method = _.get(options, 'method', 'get').toLowerCase();
  - const isStandart = _.includes(['get', 'post'], method);
  div.card.card-body.shadow-sm.pb-1
    form(action= url method= isStandart ? method : 'post')
      if !isStandart
        input(name='_method' type='hidden' value= method)
      block

mixin select(f, property, caption, list, options = { col: null, multiselect: false })
  - const labelCol = options.col ? options.col.label : (defaultCol ? defaultCol.label : 'pt-0');
  - const inputCol = options.col ? options.col.input : (defaultCol ? defaultCol.input : '');
  label.col-form-label.text-muted(class=`${labelCol}`)= caption
  div(class= inputCol)
    //- const value = f.object[property] === undefined ? '' : f.object[property]
    - const value = f.object[property] === undefined ? [] : f.object[property]
    - const values = Array.isArray(value) ? value.map(id => Number(id)) : [Number(value)]
    select.form-control(name= property multiple= (options.multiselect ?  'multiple': false))
      for item in list
        option(value=item.id selected= values.includes(item.id))= item.name

mixin autocomplete(f, property, caption, options = { url:'#', col: null })
  - const propertyId = `${property}Id`;
  - const propertyName = `${property}Name`;
  - const invalidClass = f.errors[propertyName] ? 'is-invalid' : '';
  - const labelCol = options.col ? options.col.label : (defaultCol ? defaultCol.label : 'pt-0');
  - const inputCol = options.col ? options.col.input : (defaultCol ? defaultCol.input : '');
  label.col-form-label.text-muted(class=`${labelCol}`)= caption
    if isRequired(f, propertyName) 
      sup.text-danger.pl-1 *
    block
  div(class= inputCol)
    - const _id = f.object[propertyId] === undefined ? '' : f.object[propertyId]
    - const _value = f.object[propertyName] === undefined ? '' : f.object[propertyName]
    input.form-control(name= propertyId id= propertyId autocomplete='off' type='hidden' value=_id)
    input.form-control.autocomplete(name= propertyName id= propertyName class=`${invalidClass}` autocomplete='off' data-source=options.url data-target=propertyId value=_value)
    if f.errors[propertyName]
      .invalid-feedback= f.errors[propertyName].map(({ message }) => message).join('. ')

mixin input(f, property, caption, options = { as: 'text', col: null, autofocus: false, autocomplete: 'off' })
  - const invalidClass = f.errors[property] ? 'is-invalid' : '';
  - const labelCol = options.col ? options.col.label : (defaultCol ? defaultCol.label : 'pt-0');
  - const inputCol = options.col ? options.col.input : (defaultCol ? defaultCol.input : '');
  - const autocomplete = options.autocomplete || 'off';
  label.col-form-label.text-muted(class=`${labelCol}`)= caption
    if isRequired(f, property) 
      sup.text-danger.pl-1 *
  div(class= inputCol)
    - const value = f.object[property] === undefined ? '' : f.object[property]
    input.form-control(name= property id= property class=`${invalidClass}` autocomplete= autocomplete autofocus=options.autofocus type=options['as'] value= value)
    if f.errors[property]
      .invalid-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin date(f, property, caption, options = { col: null, menu: null })
  - const invalidClass = f.errors[property] ? 'is-invalid' : '';
  - const labelCol = options.col ? options.col.label : (defaultCol ? defaultCol.label : 'pt-0');
  - const inputCol = options.col ? options.col.input : (defaultCol ? defaultCol.input : '');
  label.col-form-label.text-muted(class=`${labelCol}`)= caption
    if isRequired(f, property) 
      sup.text-danger.pl-1 *
  div.input-group(class= inputCol)
    - const value = f.object[property] === undefined ? '' : f.object[property]
    input.form-control.datepicker(name= property class=`${invalidClass}` autocomplete='off' type='text' value= value)
    .input-group-append
      button.btn.btn-outline-secondary(type='button' disabled=(!options.menu) data-toggle='dropdown' aria-haspopup='true' aria-expanded='false')
        i.fas.fa-calendar-day
      if options.menu
        .dropdown-menu
          .dropdown-item(href='#') завтра
          .dropdown-item(href='#') 3 дня
          .dropdown-item(href='#') неделю
          .dropdown-item(href='#') 10 дней
    if f.errors[property]
      .invalid-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin textarea(f, property, caption, rows = 3, options = { col: null })
  - const labelCol = options.col ? options.col.label : defaultCol.label;
  - const inputCol = options.col ? options.col.input : defaultCol.input;
  label.col-form-label.text-muted(class= labelCol)= caption
  div(class= inputCol)
    - const value = f.object[property] === undefined ? '' : f.object[property]
    textarea.form-control(name= property rows= rows)= value

mixin fileupload(target, attachTo)
    div.dm-uploader.p-4(id='drop-area' data-target= target  data-attach-to= attachTo)
     span.btn.btn-outline-primary
       span Выберите файл
       input(type='file' title='Click to add Files')
     span.pl-3.mb-4.mt-4.text-muted или перетащите файл сюда

//- ---------------------------

mixin inputText(value, caption, options = { col: null, inputClass: '' })
  - const labelCol = options.col ? options.col.label : defaultCol.label;
  - const inputCol = options.col ? options.col.input : defaultCol.input;
  label.col-form-label.text-muted(class= labelCol)= caption
  div(class= inputCol)
    .form-control.form-control-plaintext.border-bottom(class= options.inputClass)= value

mixin textareaText(value, caption, rows = 3, options = { col: null })
  - const labelCol = options.col ? options.col.label : defaultCol.label;
  - const inputCol = options.col ? options.col.input : defaultCol.input;
  label.col-form-label.text-muted(class= labelCol)= caption
  div(class= inputCol)
    textarea.form-control.form-control-plaintext.border-bottom(rows= rows)= value

mixin formFooter(primaryName = 'Сохранить', referUrl)
  .form-group.text-right.pt-3
    a.btn.btn-light(href=(referUrl || referFor()) rel='noreferrer' id='btnCancel') Отменить
    button.btn.btn-default.btn-primary.pl-4.pr-4(type='submit' id='btnSubmit')
      //- .spinner-border.spinner-border-sm.mr-1.invisible
      = primaryName

mixin buttonCancelAjax(url, target)
  button.btn.btn-light.btn-load(type='button' data-source= url data-target= target id='btnCancel') Отменить

mixin buttonSaveAjax(url, target, buttonName = 'Сохранить')
    button.btn.btn-default.btn-load.btn-primary.pl-4.pr-4(type='button' data-source= url data-target= target data-method='patch' id='btnSubmit')
      //- .spinner-border.spinner-border-sm.mr-1.invisible
      = buttonName

mixin buttonEdit(url, full)
  a.btn.btn-light(href= url data-toggle='tooltip' title=(full ? '' : 'Изменить') data-placement='top')
    i.fas.fa-pen.text-muted
    if full
      span.pl-2 Изменить

mixin buttonEditAjax(url, target, full)
  button.btn.btn-light.btn-load(data-toggle='tooltip' title=(full ? '' : 'Изменить') data-placement='top' data-source= url data-target= target)
    i.fas.fa-pen.text-muted
    if full
      span.pl-2 Изменить

mixin buttonDelete(url, name)
  span(data-toggle='tooltip' title='Удалить' data-placement='top')
    button.btn.btn-light.btn-delete(type='button' data-toggle='modal' data-target= '#modalConfirmDelete' data-delete-url= url data-delete-name= name)
      i.fas.fa-trash-alt.text-muted

mixin confirmDelete()
  .modal.fade(id='modalConfirmDelete' tabindex='-1' role='dialog' area-hidden='true')
    .modal-dialog.modal-dialog-centered(rolde='document')
      .modal-content
        .modal-header
          h5.modal-title Подтверждение
          button(type='button' class='close' data-dismiss='modal' area-label='close')
            span(area-hidden='true') &times;
        .modal-body
          p(id='confirmDeleteMsg') Нужно задать параметры в buttonDelete
        .modal-footer
          button.btn.btn-light(type='button' data-dismiss='modal') Отменить
          a.btn.btn-outline-danger.pl-3.pr-3(id='confirmDeleteButton' href='#' data-method='delete' rel='nofollow') Удалить
          //- form(action= url method='post')
          //-   input(name='_method' type='hidden' value='delete')
          //-   button.btn.btn-warning.pl-3.pr-3(type='submit') Удалить
